{"version":3,"file":"static/js/349.376eb9ff.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","webpack://react-homework-template/./src/components/ContactsList/ContactsItem/ContactsItem.module.css?5f2a","components/ContactsList/ContactsItem/item.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/index.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/index.jsx","components/Form/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Form_box__A47q8\",\"title\":\"Form_title__5gZHF\",\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"btn\":\"Form_btn__0ebGo\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactsItem_button__S+pxM\",\"item\":\"ContactsItem_item__teaw-\"};","import Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations/operations';\nimport css from './ContactsItem.module.css';\nimport { LoaderDelete } from 'components/Loader';\nimport { useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { useEffect } from 'react';\n\nexport const ContactsItem = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.isLoading);\n\n  useEffect(() => {\n    return () => {\n      if (isLoading === id) {\n        Notiflix.Notify.failure(\n          `You have removed ${name} contact from your list`\n        );\n      }\n    };\n  }, [id, isLoading, name]);\n\n  return (\n    <li className={css.item}>\n      {name}: {number}\n      <Button\n        variant=\"danger\"\n        className={css.button}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n        {isLoading === id && <LoaderDelete />}\n      </Button>\n    </li>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\",\"filterBox\":\"Filter_filterBox__A-UPt\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filter } from 'redux/actions/contactsActions';\n\nexport default function Filter() {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.filterBox}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          onChange={e => dispatch(filter(e.currentTarget.value))}\n          value={value}\n          type=\"text\"\n        />\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"titleContacts\":\"ContactsList_titleContacts__xxlBP\",\"contactsBox\":\"ContactsList_contactsBox__B8Lcp\",\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"text\":\"ContactsList_text__URA4K\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations/operations';\nimport { useEffect } from 'react';\nimport { ContactsItem } from './ContactsItem/item';\nimport { Loader } from 'components/Loader';\nimport Filter from 'components/Filter';\nimport css from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(state => state.entities);\n  const isLoading = useSelector(state => state.isLoading);\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.filter);\n\n  const searchName = () => {\n    return contacts.filter(cont => cont.name.toLowerCase().includes(filter));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contactsBox}>\n      <h2 className={css.titleContacts}>Contacts</h2>\n      <Filter />\n      {contacts.length > 0 ? (\n        <ul className={css.contactsList}>\n          {searchName().map(({ name, id, number }) => (\n            <ContactsItem name={name} key={id} id={id} number={number} />\n          ))}\n          {isLoading === 'fetch' && <Loader />}\n        </ul>\n      ) : (\n        !isLoading && (\n          <p className={css.text}>You don't have saved contacts yet</p>\n        )\n      )}\n    </div>\n  );\n}\n","import Button from 'react-bootstrap/Button';\nimport Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Form.module.css';\nimport { addContact } from 'redux/operations/operations';\nimport { LoaderAdd } from 'components/Loader';\nimport { setIsLoading } from 'redux/actions/contactsActions';\nimport ContactsList from 'components/ContactsList';\n\nexport default function Form() {\n  const [name, SetName] = useState('');\n  const [number, SetNumber] = useState('');\n\n  const contactsValue = useSelector(state => state.entities);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.isLoading);\n\n  useEffect(() => {\n    if (isLoading === 'addSuccess') {\n      Notiflix.Notify.success(\n        `You have added the contact ${name}, to your list`\n      );\n      dispatch(setIsLoading());\n    }\n  }, [dispatch, isLoading, name]);\n\n  const handleInputChange = e => {\n    const currentTarget = e.currentTarget.name;\n    const value = e.currentTarget.value;\n    if (currentTarget === 'name') {\n      SetName(value);\n    }\n    if (currentTarget === 'number') {\n      SetNumber(value);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const namevalue = contactsValue.map(ar => ar.name.toLowerCase());\n    if (namevalue.includes(name.toLowerCase())) {\n      Notiflix.Notify.warning(`${name} is alredy in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n  };\n\n  return (\n    <>\n      <div className={css.box}>\n        <h1 className={css.title}>Phoneboock</h1>\n        <form onSubmit={handleFormSubmit} className={css.form}>\n          <div className={css.formBox}>\n            <label className={css.label}>\n              Name\n              <input\n                value={name}\n                onChange={handleInputChange}\n                className={css.input}\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n            </label>\n            <label className={css.label}>\n              Phone number\n              <input\n                value={number}\n                onChange={handleInputChange}\n                className={css.input}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n            </label>\n\n            <Button\n              className={css.btn}\n              variant=\"primary\"\n              size=\"sm\"\n              type=\"submit\"\n            >\n              Add Contact{isLoading === 'add' && <LoaderAdd />}\n            </Button>\n          </div>\n        </form>\n      </div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["ContactsItem","name","id","number","dispatch","useDispatch","isLoading","useSelector","state","useEffect","Notiflix","className","css","Button","variant","onClick","deleteContact","Loader","Filter","value","filter","onChange","e","currentTarget","type","ContactsList","contacts","entities","fetchContacts","length","cont","toLowerCase","includes","map","Form","useState","SetName","SetNumber","contactsValue","setIsLoading","handleInputChange","onSubmit","preventDefault","ar","addContact","pattern","title","required","size"],"sourceRoot":""}