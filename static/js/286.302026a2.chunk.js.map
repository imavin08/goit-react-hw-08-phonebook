{"version":3,"file":"static/js/286.302026a2.chunk.js","mappings":"iPACA,GAAgB,UAAY,yBAAyB,MAAQ,sB,sCCS9C,SAASA,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,cAE7CI,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACW,aAAfX,GACFY,IAAAA,OAAAA,QAAwB,kDAEzB,CAACZ,KAEJW,EAAAA,EAAAA,YAAU,WACR,OAAO,kBAAMP,GAASS,EAAAA,EAAAA,UACrB,CAACT,IAEJ,IAAMU,EAAoB,SAAAC,GACxB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvB,OAAQF,GACN,IAAK,QACH,OAAOR,EAASU,GAElB,IAAK,WACH,OAAOR,EAAYQ,GAErB,QACE,SAYN,OACE,kBAAMC,UAAWC,EAAAA,UAAeC,SATT,SAAAN,GAEvB,GADAA,EAAEO,iBACY,KAAVf,GAA6B,KAAbE,EAClB,OAAOc,MAAM,oKAEfnB,GAASoB,EAAAA,EAAAA,IAAU,CAAEjB,MAAAA,EAAOE,SAAAA,MAI5B,WACE,mBAAOU,UAAWC,EAAAA,MAAlB,mBAEE,kBACEK,YAAY,QACZN,UAAWC,EAAAA,MACXM,KAAK,QACLV,KAAK,QACLE,MAAOX,EACPoB,SAAUb,QAId,yCAEE,kBACEW,YAAY,WACZN,UAAWC,EAAAA,MACXM,KAAK,WACLV,KAAK,WACLE,MAAOT,EACPkB,SAAUb,OAGE,eAAfd,GACC,SAAC4B,EAAA,GAAD,KAEA,SAACC,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,UAAUX,UAAWC,EAAAA,OAAnD","sources":["webpack://react-homework-template/./src/components/LogIn/Login.module.css?fe69","components/LogIn/LogIn.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"Login_loginForm__dpYiO\",\"input\":\"Login_input__WkIdQ\"};","import Notiflix from 'notiflix';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './Login.module.css';\nimport { logInUser } from 'redux/operations/auth/authOperations';\nimport { useEffect } from 'react';\nimport { setAuthStatus } from 'redux/actions/contactsActions';\nimport { Loader } from 'components/Loader';\n\nexport default function LogIn() {\n  const authStatus = useSelector(state => state.auth.authStatus);\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (authStatus === 'LogError') {\n      Notiflix.Notify.failure('Error: incorrectly entered email or password');\n    }\n  }, [authStatus]);\n\n  useEffect(() => {\n    return () => dispatch(setAuthStatus());\n  }, [dispatch]);\n\n  const handleInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n\n      case 'password':\n        return setPassword(value);\n\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      return alert('Все поля должны быть заполнены');\n    }\n    dispatch(logInUser({ email, password }));\n  };\n\n  return (\n    <form className={css.loginForm} onSubmit={handleFormSubmit}>\n      <label className={css.label}>\n        Email\n        <input\n          placeholder=\"Email\"\n          className={css.input}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <label>\n        Password\n        <input\n          placeholder=\"Password\"\n          className={css.input}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleInputChange}\n        />\n      </label>\n      {authStatus === 'LogPending' ? (\n        <Loader />\n      ) : (\n        <Button type=\"submit\" variant=\"primary\" className={css.button}>\n          Log in\n        </Button>\n      )}\n    </form>\n  );\n}\n"],"names":["LogIn","authStatus","useSelector","state","auth","dispatch","useDispatch","useState","email","setEmail","password","setPassword","useEffect","Notiflix","setAuthStatus","handleInputChange","e","name","target","value","className","css","onSubmit","preventDefault","alert","logInUser","placeholder","type","onChange","Loader","Button","variant"],"sourceRoot":""}